# Original model by Michelle Sims:
# Model 2: Model with random effects for slope and intercept and latitude quadratic plus 
# overdispersion - this time I did log distance
# adjusted model  - now computes residuals and computes bayesian p-value using deviance

# converted to run in JAGS - TE
# Random effects for slope and intercept and takes 3 covariates. 

# 2020-03-10

model{
	for(i in 1:N){
		count[i] ~ dpois(mu[i])
		resid[i] <- count[i] - mu[i]  # computes residuals
		log(mu[i]) <- a0[beach[i]] + a1[beach[i]] * yearc[i] + beta[1] * X[i,1] + beta[2] * X[i,2] + beta[3] * X[i,3] + epsilon[i]
		epsilon[i] ~ dnorm(0,tau.e)

		# goodness of fit
		countpred[i] ~ dpois(mu[i])    # obtain predicted values
		loglikpre[i] <- countpred[i] * log(mu[i]) - mu[i] + logfact(countpred[i])   # log likelihood of predicted 
		loglikobs[i] <- count[i] * log(mu[i]) - mu[i] + logfact(count[i])   # log likelihood of observed values    
	}

	Devobs <- -2*sum(loglikobs[1:N])         # deviance of observed value
	Devpred <- -2*sum(loglikpre[1:N])        # deviance of predicted values
	DiffDev <- Devpred-Devobs                # difference between deviances#
	probP <- step(DiffDev)					 #  has value=1 if DiffDev>0, 0 otherwise 

	for(j in 1:nbeach){
		a0[j] <- B[j,1]
		a1[j] <- B[j,2]
		B[j,1:2] ~ dmnorm(B.hat[j,],Tau.B[,])
		B.hat[j,1] <- mu.a0
		B.hat[j,2] <- mu.a1[j]
		mu.a1[j] <- m.a1 + delta1 * latc[j] + delta2 * latc2[j]
		a0pc[j] <- exp(a0[j])
		a1pc[j] <- (exp(a1[j])-1) * 100
		rea0[j] <- a0[j] - mu.a0
		rea1[j] <- a1[j] - mu.a1[j]

	}

	#flor.mean<- mean(mu.a1[1:nbeach])
	#floridapc<- (exp(flor.mean)-1)*100  # regional % change per year

	for(k in 1:3){
		beta[k] ~ dnorm(0,0.0001)
		effpc[k] <- (exp(beta[k])-1) * 100
	}

	delta1 ~ dnorm(0,0.0001)
	delta2 ~ dnorm(0,0.0001)
	m.a1 ~ dnorm(0,0.0001)
	mu.a0 ~ dnorm(0,0.0001)
	Tau.B[1:2,1:2] <- inverse(Sigma.B[,])
	Sigma.B[1,1] <- pow(sigma.a0,2)
 	Sigma.B[2,2] <- pow(sigma.a1,2)
	Sigma.B[1,2] <- rho * sigma.a0 * sigma.a1
	Sigma.B[2,1] <- rho * sigma.a0 * sigma.a1
	sigma.a0 ~ dunif(0,100)
	sigma.a1 ~ dunif(0,100)
	rho ~ dunif(-1,1)
	tau.e <- pow(sigma.e,-2)
	sigma.e ~ dunif(0,100)
}
